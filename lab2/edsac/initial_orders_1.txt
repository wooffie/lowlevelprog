T [END]104 S [Указатель на конец программы]
A 0 S [32]   [Шаблон прибавления с 0 адресом]
S 1 S [33]   [Шаблон вычитания с адресом 1]
T 0 S [34]   [Шаблон записи с 0 адресом] [acc = 0]
T 4 S [F=0]  [Условие выхода (массив отсортирован) ]
A [ADR]88 S  [acc = adr]
U 2 S        [2 = acc = adr = j] [Добавляем счётчик в 2]
A [LEN]87 S  [acc = adr + len]
S [TWO]89 S  [acc = adr + len - 1] [До куда итерируемся вообще]
T 3 S        [3 = adr + len - 1 = i]
[START] T 0 S   [acc = 0]
A 32 S      [acc = A 0 S]
A 2 S       [acc = A j S]
U [Z1]56 S  [z1 = acc = A j S] [Запись сформированной инструкции]
U [W1]62 S  [w1 = acc = A j S] [Запись сформированной инструкции]
A [TWO]89 S [acc = A j+1 S] [Инструкция добавления j+1 элемента]
T [W2]64 S  [w2 = A j+1 S, acc = 0] [Запись сформированной инструкции]
A 33 S      [acc =  S 1 S]
A 2 S       [acc = S j+1 S] [Вычесть из аккума j+1-й элемент]
T [Z2]57 S  [z2 = S j+1 S, acc = 0] [Запись сформированной инструкции]
A 34 S      [acc = T 0 S]
A 2 S       [acc = T j S] [Записать на j-е место массива]
U [W3]65 S  [w3 = acc = T j S] [Запись сформированной инструкции]
A [TWO]89 S [acc =  T j+1 S]   [Записать на j+1-е место массива]
T [W4]67 S  [w4 =  T j+1 S, acc = 0] [Запись сформированной инструкции]
[Z1] A 0 S  [ acc = xj ] [Начало цикла - Берём j-й элемент]
[Z2] S 0 S  [acc = x(j) - x(j+1)] [Вычитание, чтобы посмотреть знак результата]
[Если отрицательный результат, то свап не нужен, иначе делаем]
G [SKIP-SWAP]68 S  [acc = x(j) - x(j+1)]
T 0 S        [acc = 0] [Обнулим, чтобы мусор не помешал безупречной работе программы]
A [TWO]89 S  [acc = 1]
T 4 S        [4 = 1, acc = 0] [Флаг]
[W1] A 0 S   [acc = x(j)] [Ранее сформированная инструкция]
T 0 S        [0 = x(j) , acc = 0]
[W2] A 0 S   [acc = x(j+1)] [Ранее сформированная инструкция]
[W3] T 0 S   [j = x(j+1) , acc = 0] [Ранее сформированная инструкция]
A 0 S        [acc = x(j)]
[W4] T 0 S   [j+1 =x(j), acc = 0] [Ранее сформированная инструкция]
[SKIP] T 0 S [acc = 0] [Отчистка, если условие было выолненно]
[INC J] A 2 S[acc = j] [Берём индекс элемента]
A [TWO]89 S  [acc = j + 1] [Инкрементируем индекс, чтобы идти дальше]
U 2 S        [5 = acc = j+1] [Запись нового индекса]
S 3 S        [acc = j+1 - (i-1)] [Вычтем и посмотрим знак]
G [START]41 S[Знак отрицательный, можно сделать ещё проход]
T 0 S        [acc = 0] [Обнуление перед изменением]
S 4 S        [acc = 0 - C(4)]
E [END]86 S  [Не было свапов, значит отсортированно]
T 0 S        [acc = 0 ]
T 4 S        [C(4) = acc = 0]
A [ADR]88 S  [acc = adr] [Адрес первого элемента массива]
T 2 S        [C(2) = adr , acc = 0] [Записываем на законное место]
A 3 S        [acc = i]
S [TWO]89 S  [acc = i--]
U 3 S        [acc = c(3) = i] [Уменьшаем на единицу]
S 2 S        [acc = i - j]
E [START]41 S[Если не меньше, то надо идти дальше, иначе выход из программы]
[END] Z 0 S
[LEN] P 8 S  [Длина массива + 1]
[ADR] P 96 S [Адрес первого элемента]
[TWO] P 1 S  [Const 10 = 2 ] [Для инкрементации адреса]
[SKIPS] P 0 S
P 0 S
P 0 S
P 0 S [Пропустил чтобы на 3 экране перфокарты были только элементы массива]
P 0 S
P 0 S
[ARRAY]
P 127 S [Массив]
P 4095 S       [Выбраны числа степени двойки - 1 для более]
P 2047 S       [ удобного их распознования]
P 1023 S
P 511 S
P 31 S
P 7 S
P 255 S


P 7 S [Сортированный Массив]
P 31 S
P 127S
P 255 S
P 511 S
P 1023 S
P 2047 S
P 4095 S
